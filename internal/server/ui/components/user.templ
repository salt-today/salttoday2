package components

import (
	"fmt"
	"math"

	"github.com/salt-today/salttoday2/internal/store"
)

func getOrderPercentage(userNum, topUserNum int32) int {
	percentage := float64(userNum) / float64(topUserNum)
	nearest := Round(percentage, 0.01)

	// minus 1 stops the top score being broken into two bars
	return int(nearest*100) - 3
}

func Round(num, unit float64) float64 {
	return math.Round(num/unit) * unit
}

templ scoreBar(likes, dislikes, userNum, topUserNum int32) {
	<div
		class={ fmt.Sprintf("justify-between space-x-4 min-w-max flex w-[%d%%] h-10 p-1 %s rounded m-0.5",
  getOrderPercentage(userNum, topUserNum), getGradient(likes, dislikes, 0)) }
	>
		if likes > 0 {
			<span class="flex">
				<img src="/public/images/thumbs-up-white.svg"/>
				{ fmt.Sprintf("%d", int(likes)) }
			</span>
		}
		if dislikes > 0 {
			// if also likes must be sorting by score, change order of text and image
			if likes > 0 {
				<span class="flex text-right">
					{ fmt.Sprintf("%d", int(dislikes)) }
					<img src="/public/images/thumbs-down-white.svg"/>
				</span>
			} else {
				<span class="flex text-right">
					<img src="/public/images/thumbs-down-white.svg"/>
					{ fmt.Sprintf("%d", int(dislikes)) }
				</span>
			}
		}
	</div>
}

templ UserComponent(user *store.User, orderBy int, topUser *store.User) {
	<tr>
		<td class="text-nowrap text-end">
			<a href={ templ.URL(fmt.Sprintf("/user/%d", user.ID)) } class="hover:underline text-decoration-2">
				{ user.UserName }
			</a>
		</td>
		<td class="w-full">
			if orderBy == store.OrderByLikes {
				@scoreBar(user.TotalLikes, 0, user.TotalLikes, topUser.TotalLikes)
			} else if orderBy == store.OrderByDislikes {
				@scoreBar(0, user.TotalDislikes, user.TotalDislikes, topUser.TotalDislikes)
			} else {
				<div class="">
					@scoreBar(user.TotalLikes, user.TotalDislikes, user.TotalScore, topUser.TotalScore)
				</div>
			}
		</td>
	</tr>
}
